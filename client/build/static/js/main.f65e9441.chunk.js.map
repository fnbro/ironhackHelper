{"version":3,"sources":["framework/IAction.ts","components/NavBar.tsx","state/appState.ts","reducer/appReducer.ts","framework/history.ts","components/Login.tsx","components/Register.tsx","components/SimpleAsset.tsx","components/ShowAssets.tsx","components/Home.tsx","components/WeeklyFeedback.tsx","App.tsx","serviceWorker.ts","framework/CS.ts","index.tsx"],"names":["ActionType","nav","window","CS","getUIState","loggedIn","id","to","Component","initial","UI","counter","waitingForResponse","Login","errorMessage","Register","errorMessageRegister","BM","user","firstname","lastname","username","password","confirmpassword","assets","reducerFunctions","reducer","state","action","log","type","newState","JSON","parse","stringify","reducerFunction","undefined","INIT","createBrowserHistory","login_error","user_logged_in","user_logged_out","getBMState","className","onClick","this","handleLogout","onSubmit","handleSubmit","htmlFor","placeholder","onChange","handleUsernameChange","value","handlePasswordChange","event","target","update_user","clientAction","preventDefault","uiAction","server_called","axios","post","then","res","data","console","loggedinAction","history","push","get","loggedoutAction","register_error","updateAction","user_created","handleFirstnameChange","handleLastnameChange","handleConfirmPasswordChange","asset_updated","update_asset","assetToChange","filter","asset","_id","asset_name","asset_value","delete_asset","deleteAction","assetsToKeep","SimpleAsset","props","handleSwitchToEditMode","bind","handleNameChange","handleValueChange","handleSave","handleRerenderTest","handleDelete","edit_mode","edit","name","setState","newAsset","put","render_test","React","PureComponent","create_asset","ShowAssets","handleCreateAsset","toString","map","key","mongoose","Types","ObjectId","Startpage","WeeklyFeedback","add_assets_from_server","App","response","responseAction","catch","error","path","component","exact","Boolean","location","hostname","match","reduxMiddleware","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","store","message","getState","createStore","dispatch","initializeStore","ReactDOM","render","stateCounter","document","getElementById","getStore","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f65e9441.chunk.js","sourcesContent":["export enum ActionType {\r\n    INIT = \"@@INIT\",\r\n    login_error = \"login_error\",\r\n    register_error = 'register_error',\r\n    user_logged_in = \"user_logged_in\",\r\n    user_logged_out = \"user_logged_out\",\r\n    update_user = \"update_user\",\r\n    user_created = \"user_created\",\r\n    user_exists = \"user_exists\",\r\n    create_asset = \"create_asset\",\r\n    update_asset = \"update_asset\",\r\n    delete_asset = \"delete_asset\",\r\n    render_test = \"render_test\",\r\n    server_called = \"server_called\",\r\n    asset_updated = \"asset_updated\",\r\n    add_assets_from_server = \"add_assets_from_server\" \r\n}\r\nexport interface IAction {\r\n    type: ActionType;\r\n}\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IState } from '../state/appState';\r\nimport { IWindow } from '../framework/IWindow';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport default class nav extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n        return (\r\n            <nav>\r\n                <div id=\"ironhack-helper\">\r\n                    <NavLink to=\"/\">Ironhack Helper</NavLink>\r\n                </div>\r\n                <div id=\"nav-links\">\r\n                    <NavLink to=\"/\">Home</NavLink>\r\n                    <NavLink to=\"/news\">News</NavLink>\r\n                    <NavLink to=\"/feedback\">Feedback</NavLink>\r\n                    <NavLink to=\"/forum\">Forum</NavLink>\r\n                    <div id=\"dropdown\">\r\n                        <button id=\"dropbtn\">Extras\r\n                        <i id=\"fa fa-caret-down\"></i>\r\n                        </button>\r\n                        <div id=\"dropdown-content\">\r\n                            <NavLink to=\"/random\">Pair Programming</NavLink>\r\n                            <NavLink to=\"/links\">Helpful Links</NavLink>\r\n                            <NavLink to=\"/settings\">Settings</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink to=\"/login\">Logout</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    else\r\n        return (\r\n            <nav>\r\n                <div id=\"ironhack-helper\">\r\n                    <NavLink to=\"/\">Ironhack Helper</NavLink>\r\n                </div>\r\n                <div id=\"nav-links\">\r\n                    <NavLink to=\"/\">Home</NavLink>\r\n                    <NavLink to=\"/news\">News</NavLink>\r\n                    <NavLink to=\"/feedback\">Feedback</NavLink>\r\n                    <NavLink to=\"/forum\">Forum</NavLink>\r\n                    <div id=\"dropdown\">\r\n                        <button id=\"dropbtn\">Extras\r\n                        <i id=\"fa fa-caret-down\"></i>\r\n                        </button>\r\n                        <div id=\"dropdown-content\">\r\n                            <NavLink to=\"/random\">Pair Programming</NavLink>\r\n                            <NavLink to=\"/links\">Helpful Links</NavLink>\r\n                            <NavLink to=\"/settings\">Settings</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                    <NavLink to=\"/login\">Login</NavLink>\r\n                    <NavLink to=\"/register\">Register</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import Register from \"../components/test\";\r\n\r\nexport interface IUser {\r\n    firstname:string;\r\n    lastname:string;\r\n    username:string;\r\n    password:string;\r\n    confirmpassword:string;\r\n}\r\n\r\nexport interface ILogin{\r\n    errorMessage:string;\r\n}\r\n\r\nexport interface IRegister {\r\n    errorMessageRegister: string;\r\n}\r\n\r\nexport interface IUI{\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse:boolean;\r\n}\r\n\r\nexport interface IUI {\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse: boolean;\r\n    Login: ILogin;\r\n    Register: IRegister;\r\n}\r\n\r\nexport interface IAssetData {\r\n    _id: string;\r\n    asset_name: string;\r\n    asset_value: number;\r\n  }\r\n\r\nexport interface IBM{\r\n    user:IUser;\r\n    assets:IAssetData[]\r\n}\r\n\r\n\r\nexport interface IState{\r\n    UI:IUI;\r\n    BM:IBM;\r\n}\r\n\r\n// initial state \r\nexport const initial:IState = {\r\n\tUI: {\r\n\t\tcounter: 0,\r\n\t\tloggedIn: false,\r\n        waitingForResponse: false,\r\n        Login: {errorMessage:\"\"},\r\n        Register: {errorMessageRegister:\"\"}\r\n    },\r\n\tBM: {\r\n        user:{\r\n            firstname:\"\",\r\n            lastname:\"\",\r\n            username:\"\",\r\n            password:\"\",\r\n            confirmpassword:\"\"\r\n        },\r\n        assets:[]\r\n\t}\r\n};\r\n","import { initial, IState } from '../state/appState'\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { IAction, ActionType } from '../framework/IAction'\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport const reducerFunctions:any = {};\r\n\r\nexport const reducer = (state = initial, action: IAction) => {\r\n    window.CS.log(\"2. ACTION:\" + action.type);\r\n    let newState:IState = JSON.parse(JSON.stringify(state)) as IState;\r\n    newState.UI.counter = state.UI.counter + 1;\r\n    const reducerFunction = reducerFunctions[action.type];\r\n\tif (reducerFunction !== undefined) {\r\n\t\treducerFunction(newState,action);\r\n        return newState;\r\n    }\r\n    switch (action.type) {\r\n        case ActionType.INIT:\r\n            return newState;\r\n        default:\r\n            window.CS.log(\"1. Error!!!!! no reducer defined\");\r\n            return newState;\r\n    }\r\n}\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IUserAction } from './Register';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.login_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_in] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = true;\r\n    newState.BM.user = action.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_out] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = false;\r\n    newState.BM.user = { lastname: \"\", firstname: \"\", username: \"\", password: \"\", confirmpassword: \"\" };\r\n    return newState\r\n}\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n            return (\r\n                <div>\r\n                    <p>You are logged in as {window.CS.getBMState().user.username}</p>\r\n                    <button className=\"join-btn\" onClick={this.handleLogout}>Logout</button>\r\n                </div>\r\n            )\r\n        else\r\n            return (\r\n                <div className=\"signupSection\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <h2 className=\"signup\">Login</h2>\r\n                        <ul className=\"noBullet\">\r\n                            <li>\r\n                                <label htmlFor=\"username\"></label>\r\n                                <input className=\"inputFields\" type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                            </li>\r\n                            <li>\r\n                                <label htmlFor=\"password\"></label>\r\n                                <input className=\"inputFields\" type=\"password\" placeholder=\"password\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                            </li>\r\n                            <input className= \"join-btn\"  type=\"submit\" value=\"Login\" />\r\n                            <p className=\"errorMessage\">{window.CS.getUIState().Login.errorMessage}</p>\r\n                        </ul>\r\n                    </form>\r\n                </div>\r\n            )\r\n    }\r\n\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/login', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                console.log(data);\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.login_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const loggedinAction: IUserAction = {\r\n                        type: ActionType.user_logged_in,\r\n                        user: data as IUser\r\n                    }\r\n                    window.CS.clientAction(loggedinAction);\r\n                    history.push(\"/feedback\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleLogout() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.get('/auth/logout').then(res => {\r\n            const loggedoutAction: IAction = {\r\n                type: ActionType.user_logged_out\r\n            }\r\n            window.CS.clientAction(loggedoutAction);\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IUserAction extends IAction {\r\n    user: IUser\r\n}\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.register_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Register.errorMessageRegister = action.errorMessage;\r\n    return newState\r\n}\r\n\r\nreducerFunctions[ActionType.update_user] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.BM.user = updateAction.user;\r\n    newState.UI.Register.errorMessageRegister = \"\";\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_created] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Register.errorMessageRegister = \"\";\r\n    newState.UI.loggedIn = true;\r\n    return newState\r\n}\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"signupSection\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h2 className=\"signup\">Sign Up</h2>\r\n                    <ul className=\"noBullet\">\r\n                        <li>\r\n                            <label htmlFor=\"firstname\"></label>\r\n                            <input className=\"inputFields\" type=\"text\" placeholder=\"firstname\" onChange={this.handleFirstnameChange} value={window.CS.getBMState().user.firstname} />\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor=\"lastname\"></label>\r\n                            <input className=\"inputFields\" type=\"text\" placeholder=\"lastname\" onChange={this.handleLastnameChange} value={window.CS.getBMState().user.lastname} />\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor=\"username\"></label>\r\n                            <input className=\"inputFields\" type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor=\"password\"></label>\r\n                            <input className=\"inputFields\" type=\"password\" placeholder=\"password\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor=\"password\"></label>\r\n                            <input className=\"inputFields\" type=\"password\" placeholder=\"confirm password\" onChange={this.handleConfirmPasswordChange} value={window.CS.getBMState().user.confirmpassword} />\r\n                        </li>\r\n                        <input className=\"join-btn\" type=\"submit\" value=\"Register as new User\" />\r\n                        <p className=\"errorMessage\">{window.CS.getUIState().Register.errorMessageRegister}</p>\r\n                    </ul>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFirstnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.firstname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLastnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.lastname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleConfirmPasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.confirmpassword = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/signup', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                console.log(data);\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.register_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                }\r\n                else {\r\n                    const uiAction: IAction = {\r\n                        type: ActionType.user_created\r\n                    }\r\n                    history.push('/');\r\n                    window.CS.clientAction(uiAction);\r\n\r\n                    console.log(res.data)\r\n                }\r\n\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { IAssetAction } from './ShowAssets';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IAssetData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\n\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\ndeclare let window: IWindow;\r\n\r\n//this file defines the React component that renders a single asset to the browser window\r\n//it also contains the logic to change asset properties and save the changes to the database\r\n//most of the used React framework features are already explained in the comments of App.js\r\n//so this code hopefully mostly explains itself ...\r\n\r\ninterface IProps {\r\n    edit: boolean;\r\n    asset: IAssetData;\r\n}\r\n\r\ninterface IJSXState {\r\n    edit_mode: boolean;\r\n}\r\n\r\nreducerFunctions[ActionType.asset_updated] = function (newState: IState, updateAction: IAssetAction) {\r\n    newState.UI.waitingForResponse=false;\r\n}\r\nreducerFunctions[ActionType.update_asset] = function (newState: IState, updateAction: IAssetAction) {\r\n    let assetToChange: IAssetData[] = newState.BM.assets.filter(asset => asset._id === updateAction.asset._id)\r\n    console.log(assetToChange);\r\n    assetToChange[0].asset_name = updateAction.asset.asset_name;\r\n    assetToChange[0].asset_value = updateAction.asset.asset_value;\r\n    return newState;\r\n}\r\nreducerFunctions[ActionType.delete_asset] = function (newState: IState, deleteAction: IAssetAction) {\r\n    let assetsToKeep: IAssetData[] = newState.BM.assets.filter(asset => asset._id !== deleteAction.asset._id)\r\n    newState.BM.assets = assetsToKeep;\r\n    return newState;\r\n}\r\n\r\n\r\nexport default class SimpleAsset extends React.PureComponent<IProps, IJSXState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.handleSwitchToEditMode = this.handleSwitchToEditMode.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleValueChange = this.handleValueChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleRerenderTest = this.handleRerenderTest.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            edit_mode: props.edit,\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //if the component is in edit mode, it will render different than if it just shows the data\r\n        if (this.state.edit_mode)\r\n            return (\r\n                <tr>\r\n                    <td><input type=\"text\" name=\"name\" value={this.props.asset.asset_name} onChange={this.handleNameChange} /></td>\r\n                    <td><input type=\"number\" name=\"value\" value={this.props.asset.asset_value} onChange={this.handleValueChange} /> €</td>\r\n                    <td>\r\n                        <button onClick={this.handleSave} id={this.props.asset._id}>save</button>\r\n                        <button onClick={this.handleRerenderTest} >increase State Counter</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        else\r\n            return (\r\n                <tr>\r\n                    <td>{this.props.asset.asset_name}</td>\r\n                    <td>{this.props.asset.asset_value} €</td>\r\n                    <td>\r\n                        <button onClick={this.handleSwitchToEditMode}>edit</button>\r\n                        <button onClick={this.handleDelete} id={this.props.asset._id}>sell or dispose</button>\r\n                        <button onClick={this.handleRerenderTest} >increase State Counter {window.CS.getUIState().counter}</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n    }\r\n    handleSwitchToEditMode() {\r\n        this.setState({ edit_mode: true });\r\n    }\r\n    handleNameChange(event: any) {\r\n        const newAsset = this.props.asset;\r\n        newAsset.asset_name = event.target.value\r\n        const action: IAssetAction = {\r\n            type: ActionType.update_asset,\r\n            asset: newAsset\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleValueChange(event: any) {\r\n        const newAsset = this.props.asset;\r\n        newAsset.asset_value = event.target.value;\r\n        const action: IAssetAction = {\r\n            type: ActionType.update_asset,\r\n            asset: newAsset\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSave(event: any) {\r\n        this.setState({ edit_mode: false });\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n          }\r\n          window.CS.clientAction(uiAction);\r\n        axios.put('/assets/update/' + this.props.asset._id, this.props.asset)\r\n        .then(res => {\r\n            const uiAction: IAction = {\r\n                type: ActionType.asset_updated\r\n              }\r\n              window.CS.clientAction(uiAction);\r\n        });\r\n    }\r\n    handleDelete() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n          }\r\n          window.CS.clientAction(uiAction);\r\n          axios.post('/assets/delete/' + this.props.asset._id)\r\n          .then(res => {\r\n            const action: IAssetAction = {\r\n                type: ActionType.delete_asset,\r\n                asset: this.props.asset\r\n            }\r\n            window.CS.clientAction(action)\r\n          });\r\n    }\r\n    handleRerenderTest(event: any) {\r\n        const action: IAction = {\r\n            type: ActionType.render_test,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport SimpleAsset from './SimpleAsset'\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport {IAssetData,IState} from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\n\r\nimport { IWindow } from '../framework/IWindow'\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps{};\r\ninterface IJSXState { };\r\nexport interface IAssetAction extends IAction {\r\n  asset: IAssetData\r\n}\r\nreducerFunctions[ActionType.create_asset] = function (newState: IState, action: IAssetAction) {\r\n  newState.BM.assets.push(action.asset);\r\n  newState.UI.waitingForResponse=false;\r\n  return newState;\r\n}\r\n\r\nexport default class ShowAssets extends Component<IProps, IJSXState> {\r\n    constructor(props: any) {\r\n        console.log(\"new App component will be initialized\");\r\n        super(props);\r\n        this.handleCreateAsset = this.handleCreateAsset.bind(this);\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n          <p> {window.CS.getUIState().waitingForResponse.toString()}{window.CS.getUIState().counter}</p>\r\n          <h1>simple asset management application</h1>\r\n          <p>to create a new asset click this button:&nbsp;\r\n            <button onClick={this.handleCreateAsset}>create asset</button>\r\n          </p>\r\n          <table>\r\n            <tbody>\r\n              <tr><th>description</th><th>value</th><th>action</th></tr>\r\n              {window.CS.getBMState().assets.map(asset => <SimpleAsset key={asset._id} asset={asset} edit={false} />)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        )\r\n    }\r\n    handleCreateAsset() {\r\n        console.log(\"handleCreateAsset invoked\");\r\n        const uiAction: IAction = {\r\n          type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        const newAsset: IAssetData = {\r\n          _id: mongoose.Types.ObjectId().toString(),\r\n          asset_name: \"\",\r\n          asset_value: 0\r\n        }\r\n        const action: IAssetAction = {\r\n          type: ActionType.create_asset,\r\n          asset: newAsset\r\n        }\r\n        axios.post('/assets/add', newAsset)\r\n        .then(res => {\r\n          window.CS.clientAction(action);\r\n          console.log(res.data)\r\n        });\r\n      }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Startpage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Startpage</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IWindow } from '../framework/IWindow';\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface ISurveyState { };\r\n\r\nexport default class WeeklyFeedback extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Ironhack Weekly Survey</h1>\r\n                <h5>Hey there,\r\n                We hope you enjoyed your week to the fullest ! As you may know, we take feedback very seriously.\r\n                Part of getting your feedback will be through this weekly survey.\r\n                We will send you a survey like this one every week so you can give us your feedback about different topics that help us to improve.\r\n                Remember that the feedback should be constructive & action-oriented.\r\n                Other than that, enjoy the ride and get ready for a great & intense time!\r\n                </h5>\r\n                <h3>Please enter your name:</h3>\r\n                <input type=\"text\" />\r\n\r\n                <h3>Choose the current week</h3>\r\n                <div>\r\n                    <input type=\"radio\" id=\"week1\" name=\"CurrentWeek\" value=\"Week1\" />\r\n                    <label htmlFor=\"week1\"> => Week 1</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"week2\" name=\"CurrentWeek\" value=\"Week2\" />\r\n                    <label htmlFor=\"week1\"> => Week 2</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"week3\" name=\"CurrentWeek\" value=\"Week3\" />\r\n                    <label htmlFor=\"week1\"> => Week 3</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"week4\" name=\"CurrentWeek\" value=\"Week4\" />\r\n                    <label htmlFor=\"week1\"> => Week 4</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"week5\" name=\"CurrentWeek\" value=\"Week5\" />\r\n                    <label htmlFor=\"week1\"> => Week 5</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"week6\" name=\"CurrentWeek\" value=\"Week6\" />\r\n                    <label htmlFor=\"week1\"> => Week 6</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"week7\" name=\"CurrentWeek\" value=\"Week7\" />\r\n                    <label htmlFor=\"week1\"> => Week 7</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"week8\" name=\"CurrentWeek\" value=\"Week8\" />\r\n                    <label htmlFor=\"week1\"> => Week 8</label>\r\n                </div>\r\n\r\n                <div>\r\n                    <h3>On a scale from 0 to 10, how satisfied are you with this week at Ironhack?</h3>\r\n                    <input type=\"radio\" id=\"satisfied0\" name=\"Satisfied\" value=\"Satisfied0\" />\r\n                    <input type=\"radio\" id=\"satisfied1\" name=\"Satisfied\" value=\"Satisfied1\" />\r\n                    <input type=\"radio\" id=\"satisfied2\" name=\"Satisfied\" value=\"Satisfied2\" />\r\n                    <input type=\"radio\" id=\"satisfied3\" name=\"Satisfied\" value=\"Satisfied3\" />\r\n                    <input type=\"radio\" id=\"satisfied4\" name=\"Satisfied\" value=\"Satisfied4\" />\r\n                    <input type=\"radio\" id=\"satisfied5\" name=\"Satisfied\" value=\"Satisfied5\" />\r\n                    <input type=\"radio\" id=\"satisfied6\" name=\"Satisfied\" value=\"Satisfied6\" />\r\n                    <input type=\"radio\" id=\"satisfied7\" name=\"Satisfied\" value=\"Satisfied7\" />\r\n                    <input type=\"radio\" id=\"satisfied8\" name=\"Satisfied\" value=\"Satisfied8\" />\r\n                    <input type=\"radio\" id=\"satisfied9\" name=\"Satisfied\" value=\"Satisfied9\" />\r\n                    <input type=\"radio\" id=\"satisfied10\" name=\"Satisfied\" value=\"Satisfied10\" />\r\n                </div>\r\n\r\n                <div>\r\n                    <h3>Please pick 3 areas of your learning experience that you think we are doing well (check 3 that apply):</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"salami\" />Curriculum topics and structure</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"schinken\" />Curriculum difficulty level</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Quality of lessons</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Quality of labs (WebDev & Data) and projects (UX/UI)</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Teacher technical skills</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Teacher teaching ability</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Teacher accessibility</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Teacher´s Assistant abilities</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Helping you achieve your personal learning goals</label>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div>\r\n                    <h3>Please pick 3 areas of your learning experience that you think we need to improve most (check 3 that apply):</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"salami\" />Curriculum topics and structure</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"schinken\" />Curriculum difficulty level</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Quality of lessons</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Quality of labs (WebDev & Data) and projects (UX/UI)</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Teacher technical skills</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Teacher teaching ability</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Teacher accessibility</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Teacher´s Assistant abilities</label>\r\n                        </li>\r\n                        <li>\r\n                            <label><input type=\"checkbox\" name=\"zutat\" value=\"sardellen\" />Helping you achieve your personal learning goals</label>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div>\r\n                    <h3>Any other comments about this week?</h3>\r\n                    <input type=\"text\"/>\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ShowAssets from './components/ShowAssets';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IAction, ActionType } from './framework/IAction';\r\nimport { IAssetData, IState } from './state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from './reducer/appReducer';\r\nimport Startpage from './components/Home';\r\nimport WeeklyFeedback from './components/WeeklyFeedback';\r\n\r\nimport { IWindow } from './framework/IWindow';\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  stateCounter: number\r\n}\r\n\r\nexport interface IAssetsLoadedAction extends IAction {\r\n  assets: IAssetData[]\r\n}\r\nreducerFunctions[ActionType.server_called] = function (newState: IState, action: IAction) {\r\n  newState.UI.waitingForResponse = true;\r\n  return newState;\r\n}\r\nreducerFunctions[ActionType.add_assets_from_server] = function (newState: IState, action: IAssetsLoadedAction) {\r\n  newState.UI.waitingForResponse = false;\r\n  newState.BM.assets = action.assets;\r\n  return newState;\r\n}\r\nexport default class App extends React.PureComponent<IProps> {\r\n\r\n  componentDidMount() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/assets/read').then(response => {\r\n      console.log(\"this data was loaded as a result of componentDidMount:\");\r\n      console.log(response.data);\r\n      const responseAction: IAssetsLoadedAction = {\r\n        type: ActionType.add_assets_from_server,\r\n        assets: response.data as IAssetData[]\r\n      }\r\n      window.CS.clientAction(responseAction);\r\n    }).catch(function (error) { console.log(error); })\r\n  }\r\n\r\n  render() {\r\n    window.CS.log(\"App --> render()\")\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/showassets\" component={ShowAssets} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route exact path=\"/\" component={Startpage} />\r\n          <Route path=\"/feedback\" component={WeeklyFeedback} />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reducer } from '../reducer/appReducer'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { IUI, IBM } from '../state/appState';\r\nimport { IWindow } from './IWindow'\r\nimport { IAction } from './IAction';\r\ndeclare let window: IWindow;\r\n\r\n//Dev tools are needed so we can see the state in the browser\r\n//Redux thunk is needed for actions that make a rest call in order to create another action, when the server responds\r\nlet reduxMiddleware: any;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    reduxMiddleware = compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n} else { reduxMiddleware = applyMiddleware(ReduxThunk); }\r\n\r\n\r\nexport class CS {\r\n    private store: any;\r\n    public log(message: string) {\r\n        console.log(message);\r\n    }\r\n    public getStore(){\r\n        return this.store;\r\n    }\r\n    public getState() {\r\n        return this.store.getState();\r\n    }\r\n    public getUIState() {\r\n        return this.getState().UI as IUI;\r\n    }\r\n    public getBMState() {\r\n        return this.getState().BM as IBM;\r\n    }\r\n    public initializeStore() {\r\n        this.store = createStore(\r\n            reducer,\r\n            reduxMiddleware\r\n        );\r\n    }\r\n   //changed this to any because of the thunk returning a function ...\r\n   public clientAction(action:IAction | Function){\r\n    this.store.dispatch(action);\r\n    }\r\n    public getDBServerURL_test(){\r\n        //return \"https://patricks-boilerplate.herokuapp.com/\";\r\n        return \"http://localhost:8080\";\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './navbar.css';\r\nimport './account.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './framework/history';\r\n//import framework components\r\n//CS: ClientServices, we will use them a lot, so to shorten the code they are just called: CS\r\nimport { CS } from './framework/CS';\r\n//we will add a CS instance to the window object.\r\n//We also want the window object strictly typed, so we declare that window has the type \"IWindow\"\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\nwindow.CS = new CS();\r\n//we create the inital Application State\r\nwindow.CS.initializeStore();\r\n\r\n//now we can render this state to the DOM using React\r\nReactDOM.render(\r\n  <Router history={history}>\r\n  <App stateCounter={window.CS.getUIState().counter} />\r\n  </Router>\r\n, document.getElementById('root'));\r\n\r\n\r\n//whenever there is a new state, we render the whole virtual DOM again\r\n//React will take care that only the differences from the previous and\r\n//the current virtual DOM will be rendered to the browser DOM\r\nwindow.CS.getStore().subscribe(() => {\r\n  window.CS.log(\"3. before render ---------------------------------------------\");\r\n  ReactDOM.render(<Router history={history}>\r\n                  <App stateCounter={window.CS.getUIState().counter} />\r\n                  </Router>, document.getElementById('root'));\r\n  window.CS.log(\"3. after render ---------------------------------------------\");\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}